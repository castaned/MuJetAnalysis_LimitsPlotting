import math
from math import *

def fCmsLimitVsM(m):
#  M = 0.276
  M = 0.315
#  LimitMin = 3.07
  LimitMin = 3.08
#  LimitMax = 4.84
  LimitMax = 4.26
  if True:
    print "M = ", M
    print "LimitMin = ", LimitMin
    print "LimitMax = ", LimitMax
    print "sigma = ", fCmsResolution(M)
    print "myGaus(M, M, fCmsResolution(M) ) = ", myGaus(M, M, fCmsResolution(M) )
    print "LimitMax-LimitMin/myGaus[M,M,sigma(M)]/sigma(M)sqrt(2pi) = ", (LimitMax - LimitMin)/myGaus(M, M, fCmsResolution(M) )/fCmsResolution(M)/sqrt(2.0*pi)
    print "1/2/sigma(M)^2 = ", 1.0/2.0/fCmsResolution(M)/fCmsResolution(M)
  return LimitMin + (LimitMax - LimitMin)*myGaus(m, M, fCmsResolution(M) )/myGaus(M, M, fCmsResolution(M) )

def fCmsLimitVsM_explicit(m):
  A = 3.082
  B = 1.18
  C = 552.0
  M = 0.315
  return A + B*exp( -552*(m - M)*(m - M) )

def myGaus(x, mu, sigma):
  return 1/( sigma * sqrt(2.0*pi) ) * exp( - (x - mu)*(x - mu) / 2.0/sigma/sigma )

def fCmsResolution ( m ):
  return (0.13 + m*0.065)/5.0

def fCmsLimitVsM_HybridNew(m,version="default"):
  if m >= 0.2113 and m <= 3.5536:
#    print m
    m_im1 = 0.2113
    m_i   = 0.2113
    for i in range(len(Limits_HybridNew)):
      if version == "default":
        m_i   = Limits_HybridNew[i][0]
        lim_i = Limits_HybridNew[i][1]
      elif version == "T5000":
        m_i   = Limits_HybridNew_T5000[i][0]
        lim_i = Limits_HybridNew_T5000[i][1]
      elif version == "T50000":
        m_i   = Limits_HybridNew_T50000[i][0]
        lim_i = Limits_HybridNew_T50000[i][1]
      elif version == "T500000":
        m_i   = Limits_HybridNew_T500000[i][0]
        lim_i = Limits_HybridNew_T500000[i][1]
      elif version == "T2000":
        m_i   = Limits_HybridNew_T2000[i][0]
        lim_i = Limits_HybridNew_T2000[i][1]
      elif version == "T2000_s777":
        m_i   = Limits_HybridNew_T2000_s777[i][0]
        lim_i = Limits_HybridNew_T2000_s777[i][1]
#      print i, m_im1, m, m_i, lim_i
      if m == m_i:
        return lim_i
      elif m > m_im1 and m < m_i:
        a = (lim_i - lim_im1) / (m_i - m_im1)
        b = (lim_im1*m_i - lim_i*m_im1) / (m_i - m_im1)
        lim = a*m+b
        return lim
      m_im1 = m_i
      lim_im1 = lim_i

MGammaD_array = [
  0.2113,
	0.22,
	0.23,
  0.24,
	0.25,
	0.26,
	0.27,
	0.28,
	0.29,
	0.3,
	0.31,
	0.32,
	0.33,
  0.34,
	0.35,
	0.36,
	0.37,
	0.38,
	0.39,
	0.4,
	0.41,
	0.42,
	0.43,
	0.44,
	0.45,
	0.46,
	0.47,
	0.48,
	0.49,
	0.5,
	0.6,
	0.7,
	0.8,
	0.9,
	1.0,
	2.0,
	3.0,
	3.5536,
]

Limits_HybridNew = [
[	0.2113	,	2.78971	]	,
[	0.22	,	2.81434	]	,
[	0.23	,	3.0374	]	,
[	0.24	,	3.06632	]	,
[	0.25	,	3.41382	]	,
[	0.26	,	3.35262	]	,
[	0.27	,	3.50041	]	,
[	0.28	,	3.8284	]	,
[	0.29	,	4.11648	]	,
[	0.3	,	4.28987	]	,
[	0.31	,	4.24827	]	,
[	0.32	,	4.21577	]	,
[	0.33	,	4.12674	]	,
[	0.34	,	3.74062	]	,
[	0.35	,	3.87837	]	,
[	0.36	,	3.38492	]	,
[	0.37	,	3.48804	]	,
[	0.38	,	3.24261	]	,
[	0.39	,	3.26512	]	,
[	0.4	,	3.16427	]	,
[	0.41	,	3.26961	]	,
[	0.42	,	3.08599	]	,
[	0.43	,	3.04782	]	,
[	0.44	,	2.98001	]	,
[	0.45	,	3.06521	]	,
[	0.46	,	3.09313	]	,
[	0.47	,	3.01982	]	,
[	0.48	,	3.14527	]	,
[	0.49	,	3.09742	]	,
[	0.5	,	3.289	]	,
[	0.6	,	2.79869	]	,
[	0.7	,	3.22691	]	,
[	0.8	,	3.06915	]	,
[	0.9	,	3.04595	]	,
[	1	,	3.11285	]	,
[	2	,	3.07633	]	,
[	3	,	2.80005	]	,
[	3.5536	,	3.00058	]	,
]

Limits_HybridNew_T5000 = [
[	0.2113	,	3.34812	]	,
[	0.22	,	3.28152	]	,
[	0.23	,	3.43382	]	,
[	0.24	,	3.38666	]	,
[	0.25	,	3.72975	]	,
[	0.26	,	3.68413	]	,
[	0.27	,	3.77671	]	,
[	0.28	,	4.11291	]	,
[	0.29	,	4.28311	]	,
[	0.3	,	4.53938	]	,
[	0.31	,	4.49428	]	,
[	0.32	,	4.48486	]	,
[	0.33	,	4.45962	]	,
[	0.34	,	4.15575	]	,
[	0.35	,	4.1223	]	,
[	0.36	,	3.81372	]	,
[	0.37	,	3.605	]	,
[	0.38	,	3.61663	]	,
[	0.39	,	3.47185	]	,
[	0.4	,	3.46234	]	,
[	0.41	,	3.23614	]	,
[	0.42	,	3.46936	]	,
[	0.43	,	3.44457	]	,
[	0.44	,	3.50328	]	,
[	0.45	,	3.34572	]	,
[	0.46	,	3.40404	]	,
[	0.47	,	3.38724	]	,
[	0.48	,	3.37217	]	,
[	0.49	,	2.91102	]	,
[	0.5	,	3.40182	]	,
[	0.6	,	3.17987	]	,
[	0.7	,	3.49689	]	,
[	0.8	,	3.44979	]	,
[	0.9	,	2.95193	]	,
[	1	,	3.23314	]	,
[	2	,	3.21177	]	,
[	3	,	3.03837	]	,
[	3.5536	,	3.1356	]	,
]

Limits_HybridNew_T50000 = [
[	0.2113	,	2.98144	]	,
[	0.22	,	2.98211	]	,
[	0.23	,	2.99024	]	,
[	0.24	,	3.0799	]	,
[	0.25	,	3.14931	]	,
[	0.26	,	3.27765	]	,
[	0.27	,	3.66787	]	,
[	0.28	,	3.55893	]	,
[	0.29	,	4.06965	]	,
[	0.3	,	4.09499	]	,
[	0.31	,	3.98248	]	,
[	0.32	,	4.19558	]	,
[	0.33	,	4.0253	]	,
[	0.34	,	3.705	]	,
[	0.35	,	3.79927	]	,
[	0.36	,	3.37496	]	,
[	0.37	,	3.27763	]	,
[	0.38	,	3.58255	]	,
[	0.39	,	3.06476	]	,
[	0.4	,	3.05301	]	,
[	0.41	,	3.04101	]	,
[	0.42	,	3.01069	]	,
[	0.43	,	2.9738	]	,
[	0.44	,	2.99502	]	,
[	0.45	,	2.98201	]	,
[	0.46	,	3.24524	]	,
[	0.47	,	3.30325	]	,
[	0.48	,	3.12241	]	,
[	0.49	,	2.97444	]	,
[	0.5	,	3.20511	]	,
[	0.6	,	3.18934	]	,
[	0.7	,	3.19435	]	,
[	0.8	,	3.13468	]	,
[	0.9	,	3.19638	]	,
[	1	,	3.1763	]	,
[	2	,	3.21159	]	,
[	3	,	3.01685	]	,
[	3.5536	,	3.11447	]	,
]

Limits_HybridNew_T2000 = [
[	0.2113	,	3.3582	]	,
[	0.22	,	3.2835	]	,
[	0.23	,	3.24935	]	,
[	0.24	,	3.49405	]	,
[	0.25	,	3.52292	]	,
[	0.26	,	3.2695	]	,
[	0.27	,	3.7812	]	,
[	0.28	,	3.77229	]	,
[	0.29	,	4.277	]	,
[	0.3	,	3.97442	]	,
[	0.31	,	4.12107	]	,
[	0.32	,	4.34282	]	,
[	0.33	,	4.00734	]	,
[	0.34	,	4.06876	]	,
[	0.35	,	3.92915	]	,
[	0.36	,	3.53448	]	,
[	0.37	,	3.53552	]	,
[	0.38	,	3.46596	]	,
[	0.39	,	3.09428	]	,
[	0.4	,	3.35645	]	,
[	0.41	,	3.20652	]	,
[	0.42	,	3.25583	]	,
[	0.43	,	3.35737	]	,
[	0.44	,	3.06964	]	,
[	0.45	,	3.35711	]	,
[	0.46	,	2.98267	]	,
[	0.47	,	3.40686	]	,
[	0.48	,	3.18829	]	,
[	0.49	,	3.24035	]	,
[	0.5	,	2.89738	]	,
[	0.6	,	3.11213	]	,
[	0.7	,	2.84692	]	,
[	0.8	,	2.69082	]	,
[	0.9	,	2.86799	]	,
[	1	,	3.21306	]	,
[	2	,	3.00607	]	,
[	3	,	3.05413	]	,
[	3.5536	,	3.1092	]	,
]

Limits_HybridNew_T2000_s777 = [
[	0.2113	,	2.9052	]	,
[	0.22	,	2.95178	]	,
[	0.23	,	2.99252	]	,
[	0.24	,	3.12977	]	,
[	0.25	,	3.21038	]	,
[	0.26	,	3.17607	]	,
[	0.27	,	3.3982	]	,
[	0.28	,	3.60495	]	,
[	0.29	,	3.87298	]	,
[	0.3	,	4.01449	]	,
[	0.31	,	3.99251	]	,
[	0.32	,	4.00615	]	,
[	0.33	,	4.24696	]	,
[	0.34	,	3.60243	]	,
[	0.35	,	3.63511	]	,
[	0.36	,	3.62931	]	,
[	0.37	,	3.22934	]	,
[	0.38	,	3.10912	]	,
[	0.39	,	3.09472	]	,
[	0.4	,	3.00095	]	,
[	0.41	,	3.03711	]	,
[	0.42	,	2.98512	]	,
[	0.43	,	3.04622	]	,
[	0.44	,	2.82248	]	,
[	0.45	,	2.90976	]	,
[	0.46	,	2.91888	]	,
[	0.47	,	3.01041	]	,
[	0.48	,	2.91345	]	,
[	0.49	,	2.97434	]	,
[	0.5	,	3.14649	]	,
[	0.6	,	3.19181	]	,
[	0.7	,	2.97137	]	,
[	0.8	,	2.91335	]	,
[	0.9	,	3.13446	]	,
[	1	,	3.11781	]	,
[	2	,	3.2089	]	,
[	3	,	2.8871	]	,
[	3.5536	,	3.05491	]	,
]

Limits_HybridNew_T500000 = [
[		0.2113	,	3.0910867018	],
[		0.22	,	3.0819861629	],
[		0.23	,	3.1010428474	],
[		0.24	,	3.1407153493	],
[		0.25	,	3.1955422172	],
[		0.26	,	3.3046485557	],
[		0.27	,	3.468470352	],
[		0.28	,	3.6795665563	],
[		0.29	,	3.9244860414	],
[		0.3	,	4.125026461	],
[		0.31	,	4.2384915813	],
[		0.32	,	4.232406388	],
[		0.33	,	4.1255299487	],
[		0.34	,	3.9138661008	],
[		0.35	,	3.6703482857	],
[		0.36	,	3.484474326	],
[		0.37	,	3.3131257625	],
[		0.38	,	3.2117337037	],
[		0.39	,	3.1490767046	],
[		0.4	,	3.1152451663	],
[		0.41	,	3.1006486282	],
[		0.42	,	3.0974797085	],
[		0.43	,	3.0885966264	],
[		0.44	,	3.0901763185	],
[		0.45	,	3.0946179417	],
[		0.46	,	3.0899546926	],
[		0.47	,	3.0844116894	],
[		0.48	,	3.0866864265	],
[		0.49	,	3.0800627617	],
[		0.5	,	3.077318276	],
[		0.6	,	3.0875707804	],
[		0.7	,	3.07701261	],
[		0.8	,	3.0725231823	],
[		0.9	,	3.0838064726	],
[		1	,	3.0776157451	],
[		2	,	3.088716104	],
[		3	,	3.0791207109	],
[		3.5536	,	3.081357762	],
]

Limits_HybridNew_T500000_notail = [
[  0.2113 , 3.09108670183 ],
[  0.22 , 3.08198616287 ],
[  0.23 , 3.10104284742 ],
[  0.24 , 3.14071534932 ],
[  0.25 , 3.19554221716 ],
[  0.26 , 3.30464855571 ],
[  0.27 , 3.46847035198 ],
[  0.28 , 3.67956655626 ],
[  0.29 , 3.92448604136 ],
[  0.3 , 4.12502646096 ],
[  0.31 , 4.23849158127 ],
[  0.32 , 4.23240638796 ],
[  0.33 , 4.1255299487 ],
[  0.34 , 3.91269229308 ],
[  0.35 , 3.66814739729 ],
[  0.36 , 3.47821354159 ],
[  0.37 , 3.30321611413 ],
[  0.38 , 3.20308537322 ],
[  0.39 , 3.1396577314 ],
[  0.4 , 3.10685665338 ],
[  0.41 , 3.09137450472 ],
[  0.42 , 3.08913903313 ],
[  0.43 , 3.07935855074 ],
[  0.44 , 3.08185530912 ],
[  0.45 , 3.08536185614 ],
[  0.46 , 3.08163428001 ],
[  0.47 , 3.07518613097 ],
[  0.48 , 3.08114037378 ],
[  0.49 , 3.07821583224 ],
[  0.5 , 3.07731827597 ],
[  0.6 , 3.08757078041 ],
[  0.7 , 3.07701260996 ],
[  0.8 , 3.07252318234 ],
[  0.9 , 3.08380647264 ],
[  1.0 , 3.07761574507 ],
[  2.0 , 3.08871610402 ],
[  3.0 , 3.07912071085 ],
[  3.5536 , 3.08135776197 ],
]
